name: "CI/CD with GitHub Actions"
on:
  push:
    branches: [ "*" ]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
          POSTGRES_PORT: 5432
          POSTGRES_DB: rails_test
          POSTGRES_TIMEOUT: 5000
    env:
      RAILS_ENV: test
      DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf
        with:
          bundler-cache: true
      - name: Structure load
        run: bin/rails db:structure:load
      - name: Rspec tests
        run: bin/bundle exec rspec
      - name: Rubocop
        run: bin/bundle exec rubocop --require rubocop-rails
  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Verify Environment
        uses: actions/checkout@v3
      - name: Qa
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/qa" ]]; then
            echo "Faça deploy para QA"
          fi
          if [[ "${{ github.ref }}" =~ ^refs/heads/qa_ ]]; then
            echo "Faça deploy para QA de uma branch específica"
          fi
      - name: Production
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "Faça deploy para produção"
          fi
      # - name: Forçar falha
      #   run: exit 1
  slackNotification:
      if: ${{ always() }}
      needs: [build, deploy]
      name: Slack Notification
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@master
      - name: Slack Notification
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
          SLACK_TITLE: "Resultado do deploy"
          SLACK_MESSAGE: |
            Autor: ${{ github.actor }}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
            Messagem de Commit: ${{ github.event.head_commit.message }}
            Build: ${{ needs.build.result }}
            Deploy: ${{ needs.deploy.result }}

