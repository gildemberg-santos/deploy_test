name: "CI/CD with GitHub Actions"

on: [push]
# on:
#   push:
#     branches: [ "*" ]
  # pull_request:
  #   types:
  #     - opened
  #     - synchronize
  #     - closed
jobs:
  check_environment:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Imprimir o ambiente
        run: |
          echo "vars: ${{ vars.CURRENT_ENV }}"
          echo "secrets: ${{ secrets.CURRENT_ENV }}"
          echo "env: ${{ env.CURRENT_ENV }}"
          echo "github: ${{ github.CURRENT_ENV }}"
          echo "github env: ${{ env.GITHUB_ENV }}"
          echo "github rules: ${{ github }}"
  # test:
  #   # verificar se o ambiente de desenvolvimento
  #   if: ${{ github.event_name == 'pull_request' && (github.event.action != 'closed' || github.event.pull_request.merged == true) }}
  #   name: Test
  #   runs-on: ubuntu-latest
  #   services:
  #     postgres:
  #       image: postgres:11-alpine
  #       ports:
  #         - "5432:5432"
  #       env:
  #         POSTGRES_HOST: localhost
  #         POSTGRES_USER: rails
  #         POSTGRES_PASSWORD: password
  #         POSTGRES_PORT: 5432
  #         POSTGRES_DB: rails_test
  #         POSTGRES_TIMEOUT: 5000
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Install Ruby and gems
  #       uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf
  #       with:
  #         bundler-cache: true
  #     - name: Rubocop
  #       run: bin/bundle exec rubocop --require rubocop-rails
  #     - name: Migration
  #       run: bin/rails db:create db:migrate
  #     - name: Rspec tests
  #       run: bin/rake
  # slackNotification:
  #     if: ${{ always() }}
  #     needs: [test]
  #     name: Slack Notification
  #     runs-on: ubuntu-latest
  #     steps:
  #     - uses: actions/checkout@master
  #     - name: Slack Notification
  #       uses: bryannice/gitactions-slack-notification@2.0.0
  #       env:
  #         SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
  #         SLACK_TITLE: "Resultado do deploy"
  #         SLACK_MESSAGE: |
  #           Autor: ${{ github.actor }}
  #           Branch: ${{ github.ref }}
  #           Commit: ${{ github.sha }}
  #           Messagem de Commit: ${{ github.event.head_commit.message }}
  #           Test: ${{ needs.test.result }}
  #           Deploy Qa: ${{ needs.deploy_qa.result }}
  #           Deploy Production: ${{ needs.deploy_production.result }}

