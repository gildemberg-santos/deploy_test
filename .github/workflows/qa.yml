name: "CI/CD with Qa"
on:
  push:
    branches: [ "qa" ]
  pull_request:
    branches: [ "qa" ]
    types:
      - opened
      - synchronize
      - closed
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    environment: qa
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_HOST: localhost
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password
          POSTGRES_PORT: 5432
          POSTGRES_DB: rails_test
          POSTGRES_TIMEOUT: 5000
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf
        with:
          bundler-cache: true
      - name: Rubocop
        run: bin/bundle exec rubocop --require rubocop-rails
      - name: Migration
        run: bin/rails db:create db:migrate
      - name: Rspec tests
        run: bin/rake
  deploy_qa:
    # if: ${{ github.event.pull_request.merged == 'true }}
    needs: test
    name: Deploy Qa
    runs-on: ubuntu-latest
    environment: qa
    if: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/qa' || github.ref == '^refs/heads/qa_')) || (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    steps:
      - name: Verify Environment
        uses: actions/checkout@v3
      - name: Migrate QA
        run: echo "Rode as migrations"
      - name: Data Migrate QA
        run: echo "Rode as data migrations"
      - name: Deploy Qa
        run: |
          echo "Faça deploy para QA"
          # gcloud beta run jobs create neurolead-migration-job \
          # --image ${{ vars.IMAGE_DOCKFILE_APPLICATION }} \
          # --command "bundle exec rake db:migrate" \
          # --execute-now --wait
  deploy_production:
    needs: test
    name: Deploy Production
    runs-on: ubuntu-latest
    environment: qa
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Verify Environment
        uses: actions/checkout@v3
      - name: Migrate Production
        run: echo "Rode as migrations"
      - name: Data Migrate Production
        run: echo "Rode as data migrations"
      - name: Deploy Production
        run: echo "Faça deploy para produção"
  slackNotification:
      if: ${{ always() }}
      needs: [test, deploy_qa, deploy_production]
      name: Slack Notification
      runs-on: ubuntu-latest
      environment: qa
      steps:
      - uses: actions/checkout@master
      - name: Slack Notification
        uses: bryannice/gitactions-slack-notification@2.0.0
        env:
          SLACK_INCOMING_WEBHOOK: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
          SLACK_TITLE: "Resultado do deploy"
          SLACK_MESSAGE: |
            Autor: ${{ github.actor }}
            Branch: ${{ github.ref }}
            Commit: ${{ github.sha }}
            Messagem de Commit: ${{ github.event.head_commit.message }}
            Test: ${{ needs.test.result }}
            Deploy Qa: ${{ needs.deploy_qa.result }}
            Deploy Production: ${{ needs.deploy_production.result }}

